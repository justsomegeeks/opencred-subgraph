// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BootcampCreated extends ethereum.Event {
  get params(): BootcampCreated__Params {
    return new BootcampCreated__Params(this);
  }
}

export class BootcampCreated__Params {
  _event: BootcampCreated;

  constructor(event: BootcampCreated) {
    this._event = event;
  }

  get _owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get bootcamp(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _bootcampURI(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OpenCredFactory extends ethereum.SmartContract {
  static bind(address: Address): OpenCredFactory {
    return new OpenCredFactory("OpenCredFactory", address);
  }

  cloneBootcamp(_owner: Address, _bootcampURI: string): Address {
    let result = super.call(
      "cloneBootcamp",
      "cloneBootcamp(address,string):(address)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromString(_bootcampURI)
      ]
    );

    return result[0].toAddress();
  }

  try_cloneBootcamp(
    _owner: Address,
    _bootcampURI: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "cloneBootcamp",
      "cloneBootcamp(address,string):(address)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromString(_bootcampURI)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createBootcamp(_owner: Address, _bootcampURI: string): Address {
    let result = super.call(
      "createBootcamp",
      "createBootcamp(address,string):(address)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromString(_bootcampURI)
      ]
    );

    return result[0].toAddress();
  }

  try_createBootcamp(
    _owner: Address,
    _bootcampURI: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createBootcamp",
      "createBootcamp(address,string):(address)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromString(_bootcampURI)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  opencredImpl(): Address {
    let result = super.call("opencredImpl", "opencredImpl():(address)", []);

    return result[0].toAddress();
  }

  try_opencredImpl(): ethereum.CallResult<Address> {
    let result = super.tryCall("opencredImpl", "opencredImpl():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CloneBootcampCall extends ethereum.Call {
  get inputs(): CloneBootcampCall__Inputs {
    return new CloneBootcampCall__Inputs(this);
  }

  get outputs(): CloneBootcampCall__Outputs {
    return new CloneBootcampCall__Outputs(this);
  }
}

export class CloneBootcampCall__Inputs {
  _call: CloneBootcampCall;

  constructor(call: CloneBootcampCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bootcampURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CloneBootcampCall__Outputs {
  _call: CloneBootcampCall;

  constructor(call: CloneBootcampCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateBootcampCall extends ethereum.Call {
  get inputs(): CreateBootcampCall__Inputs {
    return new CreateBootcampCall__Inputs(this);
  }

  get outputs(): CreateBootcampCall__Outputs {
    return new CreateBootcampCall__Outputs(this);
  }
}

export class CreateBootcampCall__Inputs {
  _call: CreateBootcampCall;

  constructor(call: CreateBootcampCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bootcampURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateBootcampCall__Outputs {
  _call: CreateBootcampCall;

  constructor(call: CreateBootcampCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetImplementationAddressCall extends ethereum.Call {
  get inputs(): SetImplementationAddressCall__Inputs {
    return new SetImplementationAddressCall__Inputs(this);
  }

  get outputs(): SetImplementationAddressCall__Outputs {
    return new SetImplementationAddressCall__Outputs(this);
  }
}

export class SetImplementationAddressCall__Inputs {
  _call: SetImplementationAddressCall;

  constructor(call: SetImplementationAddressCall) {
    this._call = call;
  }

  get _opencredImpl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetImplementationAddressCall__Outputs {
  _call: SetImplementationAddressCall;

  constructor(call: SetImplementationAddressCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
